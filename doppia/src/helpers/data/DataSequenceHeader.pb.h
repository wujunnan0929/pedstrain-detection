// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataSequenceHeader.proto

#ifndef PROTOBUF_DataSequenceHeader_2eproto__INCLUDED
#define PROTOBUF_DataSequenceHeader_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace doppia_protobuf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_DataSequenceHeader_2eproto();
void protobuf_AssignDesc_DataSequenceHeader_2eproto();
void protobuf_ShutdownFile_DataSequenceHeader_2eproto();

class DataSequenceAttribute;
class DataSequenceHeader;

// ===================================================================

class DataSequenceAttribute : public ::google::protobuf::Message {
 public:
  DataSequenceAttribute();
  virtual ~DataSequenceAttribute();

  DataSequenceAttribute(const DataSequenceAttribute& from);

  inline DataSequenceAttribute& operator=(const DataSequenceAttribute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataSequenceAttribute& default_instance();

  void Swap(DataSequenceAttribute* other);

  // implements Message ----------------------------------------------

  inline DataSequenceAttribute* New() const { return New(NULL); }

  DataSequenceAttribute* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataSequenceAttribute& from);
  void MergeFrom(const DataSequenceAttribute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DataSequenceAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:doppia_protobuf.DataSequenceAttribute)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_value();
  inline void clear_has_value();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend void  protobuf_AddDesc_DataSequenceHeader_2eproto();
  friend void protobuf_AssignDesc_DataSequenceHeader_2eproto();
  friend void protobuf_ShutdownFile_DataSequenceHeader_2eproto();

  void InitAsDefaultInstance();
  static DataSequenceAttribute* default_instance_;
};
// -------------------------------------------------------------------

class DataSequenceHeader : public ::google::protobuf::Message {
 public:
  DataSequenceHeader();
  virtual ~DataSequenceHeader();

  DataSequenceHeader(const DataSequenceHeader& from);

  inline DataSequenceHeader& operator=(const DataSequenceHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DataSequenceHeader& default_instance();

  void Swap(DataSequenceHeader* other);

  // implements Message ----------------------------------------------

  inline DataSequenceHeader* New() const { return New(NULL); }

  DataSequenceHeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DataSequenceHeader& from);
  void MergeFrom(const DataSequenceHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DataSequenceHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .doppia_protobuf.DataSequenceAttribute attributes = 3;
  int attributes_size() const;
  void clear_attributes();
  static const int kAttributesFieldNumber = 3;
  const ::doppia_protobuf::DataSequenceAttribute& attributes(int index) const;
  ::doppia_protobuf::DataSequenceAttribute* mutable_attributes(int index);
  ::doppia_protobuf::DataSequenceAttribute* add_attributes();
  ::google::protobuf::RepeatedPtrField< ::doppia_protobuf::DataSequenceAttribute >*
      mutable_attributes();
  const ::google::protobuf::RepeatedPtrField< ::doppia_protobuf::DataSequenceAttribute >&
      attributes() const;

  // @@protoc_insertion_point(class_scope:doppia_protobuf.DataSequenceHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::doppia_protobuf::DataSequenceAttribute > attributes_;
  friend void  protobuf_AddDesc_DataSequenceHeader_2eproto();
  friend void protobuf_AssignDesc_DataSequenceHeader_2eproto();
  friend void protobuf_ShutdownFile_DataSequenceHeader_2eproto();

  void InitAsDefaultInstance();
  static DataSequenceHeader* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DataSequenceAttribute

// required string name = 1;
inline bool DataSequenceAttribute::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DataSequenceAttribute::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DataSequenceAttribute::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DataSequenceAttribute::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& DataSequenceAttribute::name() const {
  // @@protoc_insertion_point(field_get:doppia_protobuf.DataSequenceAttribute.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataSequenceAttribute::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doppia_protobuf.DataSequenceAttribute.name)
}
inline void DataSequenceAttribute::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doppia_protobuf.DataSequenceAttribute.name)
}
inline void DataSequenceAttribute::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doppia_protobuf.DataSequenceAttribute.name)
}
inline ::std::string* DataSequenceAttribute::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:doppia_protobuf.DataSequenceAttribute.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataSequenceAttribute::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataSequenceAttribute::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:doppia_protobuf.DataSequenceAttribute.name)
}

// required string value = 2;
inline bool DataSequenceAttribute::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DataSequenceAttribute::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DataSequenceAttribute::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DataSequenceAttribute::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& DataSequenceAttribute::value() const {
  // @@protoc_insertion_point(field_get:doppia_protobuf.DataSequenceAttribute.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataSequenceAttribute::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:doppia_protobuf.DataSequenceAttribute.value)
}
inline void DataSequenceAttribute::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:doppia_protobuf.DataSequenceAttribute.value)
}
inline void DataSequenceAttribute::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:doppia_protobuf.DataSequenceAttribute.value)
}
inline ::std::string* DataSequenceAttribute::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:doppia_protobuf.DataSequenceAttribute.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DataSequenceAttribute::release_value() {
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DataSequenceAttribute::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:doppia_protobuf.DataSequenceAttribute.value)
}

// -------------------------------------------------------------------

// DataSequenceHeader

// repeated .doppia_protobuf.DataSequenceAttribute attributes = 3;
inline int DataSequenceHeader::attributes_size() const {
  return attributes_.size();
}
inline void DataSequenceHeader::clear_attributes() {
  attributes_.Clear();
}
inline const ::doppia_protobuf::DataSequenceAttribute& DataSequenceHeader::attributes(int index) const {
  // @@protoc_insertion_point(field_get:doppia_protobuf.DataSequenceHeader.attributes)
  return attributes_.Get(index);
}
inline ::doppia_protobuf::DataSequenceAttribute* DataSequenceHeader::mutable_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:doppia_protobuf.DataSequenceHeader.attributes)
  return attributes_.Mutable(index);
}
inline ::doppia_protobuf::DataSequenceAttribute* DataSequenceHeader::add_attributes() {
  // @@protoc_insertion_point(field_add:doppia_protobuf.DataSequenceHeader.attributes)
  return attributes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::doppia_protobuf::DataSequenceAttribute >*
DataSequenceHeader::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_list:doppia_protobuf.DataSequenceHeader.attributes)
  return &attributes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::doppia_protobuf::DataSequenceAttribute >&
DataSequenceHeader::attributes() const {
  // @@protoc_insertion_point(field_list:doppia_protobuf.DataSequenceHeader.attributes)
  return attributes_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace doppia_protobuf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DataSequenceHeader_2eproto__INCLUDED
